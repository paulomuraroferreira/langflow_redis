{"data":{"edges":[],"nodes":[{"data":{"type":"RedisChatMemory","node":{"template":{"_type":"Component","RedisURL":{"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"required":false,"placeholder":"","show":true,"value":"","name":"RedisURL","display_name":"Redis URL (Optional)","advanced":false,"input_types":["Message"],"dynamic":false,"info":"Redis URL","title_case":false,"type":"str"},"ai_message_output":{"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"required":false,"placeholder":"","show":true,"value":"","name":"ai_message_output","display_name":"AI Message","advanced":false,"input_types":["Message"],"dynamic":false,"info":"RAG Generated answer","title_case":false,"type":"str"},"cluster_kwargs":{"trace_as_input":true,"list":true,"required":false,"placeholder":"","show":true,"value":{},"name":"cluster_kwargs","display_name":"Cluster arguments","advanced":true,"dynamic":false,"info":"Optional dictionary of additional keyword arguments for the Redis cluster.","title_case":false,"type":"dict"},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from langflow.base.memory.model import LCChatMemoryComponent\nfrom langflow.inputs import MessageTextInput, SecretStrInput, DictInput, MultilineInput\nfrom langflow.io import MessageTextInput, Output\nfrom langflow.field_typing import BaseChatMessageHistory\nimport subprocess\nimport time\nfrom langchain_community.chat_message_histories import RedisChatMessageHistory\nfrom langflow.schema.message import Message\n\nclass RedisChatMemory(Component):\n    display_name = \"Redis Chat Memory\"\n    description = \"Store chat messages to Redis.\"\n    name = \"RedisChatMemory\"\n    icon = \"RedisChatMemory\"\n\n    inputs = [\n        MessageTextInput(\n            name=\"RedisURL\",\n            display_name=\"Redis URL (Optional)\",\n            info=\"Redis URL\",\n            required=False,\n        ),\n        SecretStrInput(\n            name=\"password\",\n            display_name=\"Password (Optional)\",\n            info=\"User password for the database.\",\n            required=False,\n        ),\n        MessageTextInput(\n            name=\"redis_session_id\",\n            display_name=\"Redis Session ID (Optional)\",\n            info=\"Redis Session ID.\",\n            advanced=False,\n            required=False\n        ),\n        DictInput(\n            name=\"cluster_kwargs\",\n            display_name=\"Cluster arguments\",\n            info=\"Optional dictionary of additional keyword arguments for the Redis cluster.\",\n            advanced=True,\n            is_list=True,\n        ),\n        MultilineInput(\n            name=\"human_message_input\",\n            display_name=\"Human Messages\"\n            ),\n        MessageTextInput(\n            name=\"ai_message_output\",\n            display_name=\"AI Message\",\n            info=\"RAG Generated answer\",\n        ),\n    ]\n    \n    outputs = [\n    Output(display_name=\"Message\", name=\"message\", method=\"build_message_history\"),\n]\n\n    def build_message_history(self) -> Message:\n        \n \n        session_id = self.redis_session_id or 'default_redis_user_session'\n\n        if self.RedisURL:\n            url = self.RedisURL\n        else:\n            port=6379\n            password=self.password or 'admin'\n            url = f\"redis://default:{password}@localhost:{port}\"\n\n        memory = RedisChatMessageHistory(session_id=session_id, url=url)        \n\n        memory.add_user_message(self.human_message_input)\n        memory.add_ai_message(self.ai_message_output)\n        \n        return Message(text = self.ai_message_output)","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":true,"dynamic":true,"info":"","load_from_db":false,"title_case":false},"human_message_input":{"trace_as_input":true,"multiline":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"required":false,"placeholder":"","show":true,"value":"","name":"human_message_input","display_name":"Human Messages","advanced":false,"input_types":["Message"],"dynamic":false,"info":"","title_case":false,"type":"str"},"password":{"load_from_db":true,"required":false,"placeholder":"","show":true,"value":"","name":"password","display_name":"Password (Optional)","advanced":false,"input_types":[],"dynamic":false,"info":"User password for the database.","title_case":false,"password":true,"type":"str"},"redis_session_id":{"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"required":false,"placeholder":"","show":true,"value":"teste21","name":"redis_session_id","display_name":"Redis Session ID (Optional)","advanced":false,"input_types":["Message"],"dynamic":false,"info":"Redis Session ID.","title_case":false,"type":"str"}},"description":"Store chat messages to Redis.","icon":"RedisChatMemory","base_classes":["Message"],"display_name":"Custom Component","documentation":"","custom_fields":{},"output_types":[],"pinned":false,"conditional_paths":[],"frozen":false,"outputs":[{"types":["Message"],"selected":"Message","name":"message","display_name":"Message","method":"build_message_history","value":"__UNDEFINED__","cache":true}],"field_order":["RedisURL","password","redis_session_id","cluster_kwargs","human_message_input","ai_message_output"],"beta":false,"edited":true,"official":false},"id":"RedisChatMemory-8LYDh","description":"Store chat messages to Redis.","display_name":"Custom Component"},"id":"RedisChatMemory-8LYDh","position":{"x":0,"y":0},"type":"genericNode"}],"viewport":{"x":1,"y":1,"zoom":1}},"description":"Store chat messages to Redis.","name":"Custom Component","id":"RedisChatMemory-8LYDh","is_component":true,"last_tested_version":"1.0.11"}